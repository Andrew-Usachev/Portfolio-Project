[pytest]
# addopts = --alluredir=./AllureReports/allure-results
# addopts = --html=HtmlReports/report.html
# addopts = -s -v
# addopts = -nauto
# addopts = -n 4

markers =
    smoke: marker for smoke tests
    regression: marker for regression tests
    xfail: marker for failed tests
    skip: marker for skipped tests
    win10: marker for Windows 10
    win11: marker for Windows 11
    possitive: marker for possitive tests
    negative: marker for negative tests
    boundary: marker for boundary tests
    ad-hoc: marker for ad-hoc tests
    flaky: marker for flaky tests
    slow: marker for slow tests
    development: marker for running tests in dev environment
    production: marker for running tests in prod environment
    html: mark a test to generate HTML report

;1.  @pytest.mark.skip(reason) - skip the test due to the specified reason.
;2.  @pytest.mark.xfail(condition, reason) - mark a test that is expected to fail, but if it passes, it will be considered as an error.
;3.  @pytest.mark.parametrize(argnames, argvalues) - parameterize tests by running them with different argument values.
;4.  @pytest.mark.timeout(n) - set a timeout for test execution.
;5.  @pytest.mark.usefixtures(fixture1, fixture2, ...) - use fixtures in the test.
;6.  @pytest.mark.dependency(name, depends, scope) - set dependencies between tests.
;7.  @pytest.mark.flaky(reruns, reruns_delay) - mark a test that may occasionally fail but can pass on a subsequent run.
;8.  @pytest.mark.run(order) - set the order of test execution.
;9.  @pytest.mark.slow - mark a test that takes longer to execute than usual.
;10.  @pytest.mark.smoke - mark a test that verifies the basic functionality of an application.
;11.  @pytest.mark.regression - mark a test that verifies the core functionality of an application.

; Pytest launch methods

; pytest Run all tests
; pytest -v Run tests in verbose mode
; pytest -n 4 Run tests in parallel with 4 processes
; pytest --html=report.html Run tests with HTML report
; pytest -s Run tests in the pytest framework with the results displayed in the console
; pytest -k Run tests with the specified keyword





