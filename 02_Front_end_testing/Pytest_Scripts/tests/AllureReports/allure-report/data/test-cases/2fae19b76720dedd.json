{"uid":"2fae19b76720dedd","name":"test_check_video","fullName":"tests.test_main_page.TestPositive#test_check_video","historyId":"725b7c78da4f0e001abede46ec352171","time":{"start":1705776971940,"stop":1705777009014,"duration":37074},"status":"failed","statusMessage":"AssertionError: \u001B[91mWARNING!!! ERROR IN TEST!\u001B[0m","statusTrace":"self = <Portfolio_front_end.tests.test_main_page.TestPositive object at 0x000001F6D0A081A0>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3161b854a9ae6be7833e5c6ca5980fee\")>\n\n    def test_check_video(self, browser):\n        page = MainPage(browser, link)\n        page.open()\n        page.should_be_main_page()\n        page.should_be_video()\n>       page.check_fail_status()\n\ntest_main_page.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Portfolio_front_end.pages.main_page.MainPage object at 0x000001F6D0B80140>\n\n    def check_fail_status(self):\n        \"\"\"\n        Check the status of the test and print a message indicating whether the test passed or failed.\n    \n        This function takes no parameters.\n    \n        Returns:\n            None\n        \"\"\"\n        global status\n        if status:\n            print(\"\\033[91mTEST FAILED!\\033[0m\")\n            status = 0\n>           assert (), \"\\033[91mWARNING!!! ERROR IN TEST!\\033[0m\"\nE           AssertionError: \u001B[91mWARNING!!! ERROR IN TEST!\u001B[0m\n\n..\\pages\\base_page.py:715: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705775269163,"stop":1705775269280,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1705775269280,"stop":1705775269281,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"sensitive_url","time":{"start":1705775269281,"stop":1705775269281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"_verify_url","time":{"start":1705775269281,"stop":1705775269281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"_skip_sensitive","time":{"start":1705776969168,"stop":1705776969168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"browser","time":{"start":1705776969169,"stop":1705776971939,"duration":2770},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"afterStages":[{"name":"browser::0","time":{"start":1705777009043,"stop":1705777011318,"duration":2275},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestPositive"},{"name":"host","value":"DESKTOP-7TT8LEA"},{"name":"thread","value":"11572-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2fae19b76720dedd.json","parameterValues":[]}