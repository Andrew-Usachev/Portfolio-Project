{"uid":"5df1e9ce9088950a","name":"test_login_user_with_correct_data[https://ibench.net/api/auth/login-test_headers0-test_data0]","fullName":"tests.test_login_page.TestPositive#test_login_user_with_correct_data","historyId":"1ca66a8c46551b6610b203cc7653effb","time":{"start":1705771813980,"stop":1705771839089,"duration":25109},"status":"failed","statusMessage":"AssertionError: \u001B[91mWARNING!!! ERROR IN TEST!\u001B[0m","statusTrace":"self = <Portfolio_API.tests.test_login_page.TestPositive object at 0x000001A8D0A156D0>, test_url = 'https://ibench.net/api/auth/login'\ntest_headers = {'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Sec-Fetch-Dest': 'empty', 'Sec-Fetch-Mode': 'cors', ...}\ntest_data = {'email': 'A.Crok@atlant.com', 'password': 'Password1234'}\n\n    @pytest.mark.parametrize(\n        \"test_url, test_headers, test_data\",\n        [\n            (\n                    LoginPageCorrectData.URL.value,\n                    LoginPageCorrectData.HEADER.value,\n                    LoginPageCorrectData.BODY.value\n            )\n        ],\n        indirect=[\"test_url\", \"test_headers\", \"test_data\"],\n    )\n    def test_login_user_with_correct_data(self, test_url, test_headers, test_data):\n        page = LoginPage(test_url, test_headers, test_data)\n        page.can_login_user_with_correct_data()\n        page.check_login_user_response_with_login_user_schema()\n>       page.check_fail_status()\n\ntest_login_page.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Portfolio_API.pages.login_page.LoginPage object at 0x000001A8D0DCDDC0>\n\n    def check_fail_status(self):\n        \"\"\"\n        Check the status of the test and print a message indicating whether the test passed or failed.\n    \n        This function takes no parameters.\n    \n        Returns:\n            None\n        \"\"\"\n        global status\n        if status:\n            print(\"\\033[91mTEST FAILED!\\033[0m\")\n            status = 0\n>           assert (), \"\\033[91mWARNING!!! ERROR IN TEST!\\033[0m\"\nE           AssertionError: \u001B[91mWARNING!!! ERROR IN TEST!\u001B[0m\n\n..\\pages\\base_page.py:88: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705771813798,"stop":1705771813975,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1705771813975,"stop":1705771813975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"sensitive_url","time":{"start":1705771813976,"stop":1705771813976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"test_headers","time":{"start":1705771813976,"stop":1705771813977,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1705771813976,"stop":1705771813976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"test_url","time":{"start":1705771813976,"stop":1705771813976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"_skip_sensitive","time":{"start":1705771813977,"stop":1705771813977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"test_data","time":{"start":1705771813977,"stop":1705771813977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_page"},{"name":"subSuite","value":"TestPositive"},{"name":"host","value":"DESKTOP-7TT8LEA"},{"name":"thread","value":"10140-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_data","value":"{'email': 'A.Crok@atlant.com', 'password': 'Password1234'}"},{"name":"test_headers","value":"{'sec-ch-ua': '\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\", \"Google Chrome\";v=\"120\"', 'sec-ch-ua-platform': '\"Windows\"', 'sec-ch-ua-mobile': '?0', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36', 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'host': 'ibench.net'}"},{"name":"test_url","value":"'https://ibench.net/api/auth/login'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5df1e9ce9088950a.json","parameterValues":["{'email': 'A.Crok@atlant.com', 'password': 'Password1234'}","{'sec-ch-ua': '\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\", \"Google Chrome\";v=\"120\"', 'sec-ch-ua-platform': '\"Windows\"', 'sec-ch-ua-mobile': '?0', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36', 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'host': 'ibench.net'}","'https://ibench.net/api/auth/login'"]}